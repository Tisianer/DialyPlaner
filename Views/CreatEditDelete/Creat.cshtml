@model DailyPlanner.Models.Diary

@{
    ViewBag.Title = "Creat";
}

<h2>Creat</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Diary</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.TypeEntries, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.LabelFor(m => m.TypeEntries, ViewBag.TypeEntries as string, htmlAttributes: new { @class = "control-label col-md-2" })
                @Html.HiddenFor(m => m.TypeEntries, ViewBag.TypeEntries as string)
                @Html.ValidationMessageFor(model => model.TypeEntries, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Topic, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Topic, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Topic, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.StartDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.Editor("start_date", new { htmlAttributes = new { @class = "form-control", type = "datetime" } })
                @Html.ValidationMessageFor(model => model.StartDate, "", new { @class = "text-danger" })
                <p>
                    @Html.Label("", "Дата и время должны быть формата \"дд/мм/гггг чч:мм\" или \"дд.мм.гггг чч:мм\"!", htmlAttributes: new { @class = "control-label" })
                </p>
            </div>
        </div>
        @if (ViewBag.TypeEntries != "Памятка")
        {
            <div class="form-group">
                @Html.LabelFor(model => model.ExpirationDate, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.Editor("end_date", new { htmlAttributes = new { @class = "form-control", type = "datetime" } })
                    @Html.ValidationMessageFor(model => model.ExpirationDate, "", new { @class = "text-danger" })
                    <p>
                        @Html.Label("", "Дата и время должны быть формата \"дд/мм/гггг чч:мм\" или \"дд.мм.гггг чч:мм\"!", htmlAttributes: new { @class = "control-label" })
                    </p>
                </div>
            </div>
        }
        @if (ViewBag.TypeEntries == "Встреча")
        {
            <div class="form-group">
                @Html.LabelFor(model => model.Place, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Place, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Place, "", new { @class = "text-danger" })
                </div>
            </div>
        }
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index", "Home")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
